apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion '28.0.3'
    useLibrary 'org.apache.http.legacy'
    allprojects {
        repositories {
            // The order in which you list these repositories matter.
            google()
            jcenter()
        }
    }
    android {
        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }

    Properties versionProps = new Properties()
    def versionPropsFile = file('version.properties')
    if(versionPropsFile.exists())
        versionProps.load(new FileInputStream(versionPropsFile))
    def code = (versionProps['VERSION_CODE'] ?: "0").toInteger() + 1
    versionProps['VERSION_CODE'] = code.toString()
    versionProps.store(versionPropsFile.newWriter(), null)

    defaultConfig {
        applicationId "com.davan.alarmcontroller"
        versionCode code
        versionName "0.2"
        minSdkVersion 16
        targetSdkVersion 23
    }
    signingConfigs {
        release
        debug
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

        }
        debug {
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    //outputFileName = "zenitgatekeeper-" + defaultConfig.versionName +"."+ defaultConfig.versionCode + ".apk"
                    outputFileName = "zenitgatekeeper.apk"
            }
        }
            signingConfig signingConfigs.debug

        }

}
    def isRunningOnTravis = System.getenv("CI") == "true"

    if (isRunningOnTravis) {
        // configure keystore
        signingConfigs.release.storeFile = file("../android_keystore.jks")
        signingConfigs.release.storePassword = System.getenv("keystore_password")
        signingConfigs.release.keyAlias = System.getenv("keystore_alias")
        signingConfigs.release.keyPassword = System.getenv("keystore_alias_password")
    }
}

android {
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    api 'com.android.support:appcompat-v7:23.2.1'
    api 'com.android.support:support-v4:23.2.1'
    api 'com.android.support:design:23.2.1'


}
